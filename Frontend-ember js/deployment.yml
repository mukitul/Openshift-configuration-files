apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: Frontend
  name: frontend
  namespace: ngfs-core-framework
spec:
  replicas: 1
  selector:
    app: frontend
    deploymentconfig: frontend
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Recreate
  template:
    metadata:
      labels:
        app: frontend
        deploymentconfig: frontend
    spec:
      containers:
        - image: docker-registry.default.svc:5000/ngfs-core-framework/frontend
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 8080
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - frontend
        from:
          kind: ImageStreamTag
          name: 'frontend:latest'
          namespace: ngfs-core-framework
      type: ImageChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: Frontend
  name: frontend
  namespace: ngfs-core-framework
spec:
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    deploymentconfig: frontend
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: Frontend
  name: frontend
  namespace: ngfs-core-framework
spec:
  host: frontend-ngfs-core-framework.apps.115.127.24.184.nip.io
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: frontend
    weight: 100
  wildcardPolicy: None
