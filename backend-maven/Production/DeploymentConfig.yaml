apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: production-[appname]
  name:production-[deploymentConfig name]
  namespace: [projectname]
spec:
  replicas: 1
  selector:
    app:production-[appname]
    deploymentconfig: production-[deploymentConfig name]
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        app: production-[appname]
        deploymentconfig: production-[deploymentConfig name]
    spec:
      Containers:
        - env:
            - name: MYSQL_DATABASE 
              value: crmdb
            - name: MYSQL_USER
              value: root
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: 'mysql:5.6'
          imagePullPolicy: IfNotPresent
          name: mysqlserver
          ports:
            - containerPort: 3306
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
        - image: docker-registry.default.svc:5000/projectname/[imagename]
          imagePullPolicy: Always
          name: [imagename]
          ports:
            - containerPort: 8080
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: production-[claimname]
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - [containername]
        from:
          kind: ImageStreamTag
          name: ['imagename']
          namespace: [projectname]
      type: ImageChange

